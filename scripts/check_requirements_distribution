#!/bin/bash

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
ROOT_DIR="$(dirname "$SCRIPT_DIR")"
. "$ROOT_DIR/config.sh"

. $SCRIPT_DIR/check_requirements_common
. $SCRIPT_DIR/check_requirements_build continue
. $SCRIPT_DIR/check_requirements_packaging continue

echo
echo "Checking distribution requirements:"
echo

echo -n "Checking for Mozilla ARchive (MAR) tool: "
which mar || { $FAIL_CMD; FAILED=1; echo "  -- Install mar from https://wiki.mozilla.org/UpdateGeneration"; }

echo -n "Checking for mbsdiff: "
which mbsdiff || { $FAIL_CMD; FAILED=1; echo "  -- Install mbsdiff from https://wiki.mozilla.org/UpdateGeneration"; }

echo -n "Checking for rsync: "
which rsync || { $FAIL_CMD; FAILED=1; }

echo -n "Checking for sha512sum/shasum: "
which sha512sum 2>/dev/null || which shasum 2>/dev/null || { $FAIL_CMD; FAILED=1; }

cd "$ROOT_DIR"
echo -n "Checking for deployer script: "
ls "./deployer/bin/deployer" || { $FAIL_CMD; FAILED=1; }

echo -n "Checking for GitHub release access: "
node "./deployer/index.js" -q -v || { $FAIL_CMD; FAILED=1; }
echo ""

echo -n "Checking for deploy host directory access: "
ssh "$DEPLOY_HOST" ls -d "$DEPLOY_PATH"
if [ $? -gt 0 ]; then
  FAILED=1;
else
  FAILED=0;
fi

if [ "$1" != "continue" ]; then
  echo "Exit code $FAILED"
  exit $FAILED
fi
